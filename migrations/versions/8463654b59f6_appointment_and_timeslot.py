# flake8: noqa
"""appointment and timeslot

Revision ID: 8463654b59f6
Revises: ad531684a357
Create Date: 2024-08-24 13:40:09.196345

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8463654b59f6'
down_revision = 'ad531684a357'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('patients', schema=None) as batch_op:
        batch_op.drop_index('ix_patients_contact_number')
        batch_op.drop_index('ix_patients_email')
        batch_op.drop_index('ix_patients_id')
        batch_op.drop_index('ix_patients_name')

    op.drop_table('patients')
    with op.batch_alter_table('doctors', schema=None) as batch_op:
        batch_op.drop_index('ix_doctors_department_id')
        batch_op.drop_index('ix_doctors_email')
        batch_op.drop_index('ix_doctors_id')
        batch_op.drop_index('ix_doctors_name')
        batch_op.drop_index('ix_doctors_phone')

    op.drop_table('doctors')
    with op.batch_alter_table('departments', schema=None) as batch_op:
        batch_op.drop_index('ix_departments_id')
        batch_op.drop_index('ix_departments_name')

    op.drop_table('departments')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('description', sa.VARCHAR(length=256), nullable=False),
    sa.Column('id', sa.VARCHAR(length=128), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('departments', schema=None) as batch_op:
        batch_op.create_index('ix_departments_name', ['name'], unique=False)
        batch_op.create_index('ix_departments_id', ['id'], unique=False)

    op.create_table('doctors',
    sa.Column('name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('certificates', sa.VARCHAR(length=256), nullable=False),
    sa.Column('phone', sa.VARCHAR(length=10), nullable=True),
    sa.Column('department_id', sa.VARCHAR(length=128), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=256), nullable=False),
    sa.Column('id', sa.VARCHAR(length=128), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('doctors', schema=None) as batch_op:
        batch_op.create_index('ix_doctors_phone', ['phone'], unique=1)
        batch_op.create_index('ix_doctors_name', ['name'], unique=False)
        batch_op.create_index('ix_doctors_id', ['id'], unique=False)
        batch_op.create_index('ix_doctors_email', ['email'], unique=1)
        batch_op.create_index('ix_doctors_department_id', ['department_id'], unique=False)

    op.create_table('patients',
    sa.Column('name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('contact_number', sa.VARCHAR(length=10), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=256), nullable=False),
    sa.Column('address', sa.VARCHAR(length=256), nullable=False),
    sa.Column('medical_history', sa.VARCHAR(length=400), nullable=False),
    sa.Column('current_medications', sa.VARCHAR(length=256), nullable=False),
    sa.Column('id', sa.VARCHAR(length=128), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.Column('deleted_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('patients', schema=None) as batch_op:
        batch_op.create_index('ix_patients_name', ['name'], unique=False)
        batch_op.create_index('ix_patients_id', ['id'], unique=False)
        batch_op.create_index('ix_patients_email', ['email'], unique=1)
        batch_op.create_index('ix_patients_contact_number', ['contact_number'], unique=1)

    # ### end Alembic commands ###
